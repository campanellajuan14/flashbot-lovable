
// This file is automatically generated. Do not edit it directly.
import { createClient, SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://obiiomoqhpbgaymfphdz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9iaWlvbW9xaHBiZ2F5bWZwaGR6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc3NjIyNTUsImV4cCI6MjA1MzMzODI1NX0.JAtEJ3nJucemX7rQd1I0zlTBGAVsNQ_SPGiULmjwfXY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the base Supabase client
const baseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Define custom RPC functions
type CustomRPCFunctions = 
  | 'get_user_whatsapp_config'
  | 'update_whatsapp_config_status'
  | 'update_whatsapp_active_chatbot'
  | 'get_whatsapp_messages';

// Create the extended client
const supabase = baseClient as unknown as SupabaseClient<Database> & {
  rpc<T = any>(fn: keyof Database['public']['Functions'] | CustomRPCFunctions, params?: object): Promise<{ data: T; error: any }>;
  supabaseKey: string;
  functions: {
    invoke: (name: string, options?: { body?: object }) => Promise<{ data: any; error: any }>;
  };
};

// Add the publishable key for external API calls
supabase.supabaseKey = SUPABASE_PUBLISHABLE_KEY;

// Add the functions property if it doesn't exist
if (!('functions' in supabase)) {
  Object.defineProperty(supabase, 'functions', {
    value: {
      invoke: (name: string, options?: { body?: object }) => 
        baseClient.functions.invoke(name, options)
    },
    writable: false
  });
}

export { supabase };
