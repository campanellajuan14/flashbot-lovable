
// This file is automatically generated. Do not edit it directly.
import { createClient, SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://obiiomoqhpbgaymfphdz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9iaWlvbW9xaHBiZ2F5bWZwaGR6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzc3NjIyNTUsImV4cCI6MjA1MzMzODI1NX0.JAtEJ3nJucemX7rQd1I0zlTBGAVsNQ_SPGiULmjwfXY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Creamos un cliente base
const baseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Corregir: extendemos correctamente las definiciones de tipos para las funciones RPC
type CustomRPCFunctions = 
  | 'get_user_whatsapp_config'
  | 'update_whatsapp_config_status'
  | 'update_whatsapp_active_chatbot'
  | 'get_whatsapp_messages';

// Extendemos el tipo supabase para exponer la propiedad anon key que necesitamos
const supabase = {
  ...baseClient,
  // Funci√≥n RPC sobrecargada para aceptar nuestras funciones personalizadas
  rpc: <T = any>(
    fn: keyof Database['public']['Functions'] | CustomRPCFunctions,
    params?: object
  ): Promise<{ data: T; error: any }> => {
    return baseClient.rpc(fn as string, params);
  },
  // Exponemos la clave anon de forma segura para usar en ciertas solicitudes
  supabaseKey: SUPABASE_PUBLISHABLE_KEY
};

export { supabase };
